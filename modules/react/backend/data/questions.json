[
  {
    "id": 1,
    "topic": "Components",
    "type": "multiple-choice",
    "question": "What is the correct way to create a React component?",
    "choices": [
      "function MyComponent() { return <div>Hello</div>; }",
      "class MyComponent { render() { return <div>Hello</div>; } }",
      "MyComponent() => { return <div>Hello</div>; }",
      "const MyComponent = { <div>Hello</div> }"
    ],
    "correctAnswer": 0,
    "explanation": "In modern React, functional components are the preferred way to create components."
  },
  {
    "id": 2,
    "topic": "Hooks",
    "type": "multiple-choice",
    "question": "Which hook is used to manage state in functional components?",
    "choices": [
      "useEffect",
      "useState",
      "useContext",
      "useReducer"
    ],
    "correctAnswer": 1,
    "explanation": "The useState hook is used to add state to functional components."
  },
  {
    "id": 3,
    "topic": "Props",
    "type": "multiple-choice",
    "question": "How do you pass data from a parent component to a child component in React?",
    "choices": [
      "Using state",
      "Using props",
      "Using context",
      "Using refs"
    ],
    "correctAnswer": 1,
    "explanation": "Props (short for properties) are how you pass data from parent to child components in React."
  },
  {
    "id": 4,
    "topic": "Lifecycle",
    "type": "multiple-choice",
    "question": "Which hook is used to handle side effects in functional components?",
    "choices": [
      "useState",
      "useContext",
      "useEffect",
      "useReducer"
    ],
    "correctAnswer": 2,
    "explanation": "The useEffect hook is used to handle side effects like data fetching, subscriptions, or manually changing the DOM."
  },
  {
    "id": 5,
    "topic": "Rendering",
    "type": "multiple-choice",
    "question": "What is the purpose of keys in React lists?",
    "choices": [
      "To style list items",
      "To identify elements and optimize rendering",
      "To add event listeners",
      "To manage component state"
    ],
    "correctAnswer": 1,
    "explanation": "Keys help React identify which items have changed, are added, or are removed. They should be given to the elements inside the array to give them a stable identity."
  }
]