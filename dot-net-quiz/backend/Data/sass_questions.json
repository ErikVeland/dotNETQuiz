[
  {
    "id": 1,
    "topic": "Basics",
    "type": "multiple-choice",
    "question": "What is SASS?",
    "choices": [
      "A CSS preprocessor that extends CSS with programming features",
      "A JavaScript framework",
      "A CSS framework like Bootstrap",
      "A build tool for web applications"
    ],
    "correctAnswer": 0,
    "explanation": "SASS (Syntactically Awesome Style Sheets) is a CSS preprocessor that adds features like variables, nesting, and mixins to CSS, which are then compiled into regular CSS."
  },
  {
    "id": 2,
    "topic": "Basics",
    "type": "multiple-choice",
    "question": "What symbol is used to define a variable in SASS?",
    "choices": [
      "$",
      "@",
      "%",
      "#"
    ],
    "correctAnswer": 0,
    "explanation": "In SASS, variables are defined using the $ symbol followed by the variable name."
  },
  {
    "id": 3,
    "topic": "Nesting",
    "type": "open-ended",
    "question": "How does nesting work in SASS and what are its benefits?",
    "choices": null,
    "correctAnswer": null,
    "explanation": "Nesting in SASS allows you to write selectors inside other selectors, creating a visual hierarchy that mirrors the HTML structure. This makes stylesheets more organized and easier to read, and reduces repetition in selector names."
  },
  {
    "id": 4,
    "topic": "Nesting",
    "type": "multiple-choice",
    "question": "How do you reference the parent selector in a nested rule in SASS?",
    "choices": [
      "&",
      "$parent",
      ":parent",
      "::parent"
    ],
    "correctAnswer": 0,
    "explanation": "The & symbol is used to reference the parent selector in nested SASS rules, commonly used for pseudo-classes and modifiers."
  },
  {
    "id": 5,
    "topic": "Mixins",
    "type": "multiple-choice",
    "question": "What is a mixin in SASS?",
    "choices": [
      "A reusable block of CSS declarations",
      "A function that returns a value",
      "A variable that stores CSS properties",
      "A selector that combines multiple classes"
    ],
    "correctAnswer": 0,
    "explanation": "A mixin in SASS is a reusable block of CSS declarations that can be included in other stylesheets. Mixins can also take arguments to make them more flexible."
  },
  {
    "id": 6,
    "topic": "Functions",
    "type": "multiple-choice",
    "question": "Which function is used to make a color lighter in SASS?",
    "choices": [
      "lighten()",
      "brighten()",
      "fade-in()",
      "adjust-color()"
    ],
    "correctAnswer": 0,
    "explanation": "The lighten() function in SASS is used to make a color lighter by increasing its lightness value."
  },
  {
    "id": 7,
    "topic": "Compilation",
    "type": "open-ended",
    "question": "What is the difference between .scss and .sass syntax?",
    "choices": null,
    "correctAnswer": null,
    "explanation": "SASS offers two syntaxes: .scss (Sassy CSS) which is CSS-compatible and uses braces and semicolons, and .sass (indented syntax) which uses indentation instead of braces and line breaks instead of semicolons. Both compile to the same CSS."
  },
  {
    "id": 8,
    "topic": "Extend",
    "type": "multiple-choice",
    "question": "What is the purpose of @extend in SASS?",
    "choices": [
      "To share CSS properties between selectors",
      "To import external stylesheets",
      "To create reusable functions",
      "To define variables"
    ],
    "correctAnswer": 0,
    "explanation": "The @extend directive in SASS allows one selector to inherit the styles of another selector, reducing code duplication by sharing CSS properties."
  },
  {
    "id": 9,
    "topic": "Architecture",
    "type": "multiple-choice",
    "question": "What is the 7-1 SASS architecture pattern?",
    "choices": ["7 folders, 1 main file structure", "7 variables, 1 mixin pattern", "7 components, 1 layout system", "7 breakpoints, 1 grid system"],
    "correctAnswer": 0,
    "explanation": "The 7-1 pattern organizes SASS files into 7 folders (base, components, layout, pages, themes, abstracts, vendors) and 1 main file that imports all partials."
  },
  {
    "id": 10,
    "topic": "Performance",
    "type": "multiple-choice",
    "question": "What is the best practice for organizing SASS imports?",
    "choices": ["Import abstracts first, then base, components, and pages", "Import in alphabetical order", "Import largest files first", "Import randomly"],
    "correctAnswer": 0,
    "explanation": "Best practice is to import in dependency order: abstracts (variables, functions, mixins), base styles, layout, components, pages, themes, and vendors."
  },
  {
    "id": 11,
    "topic": "Advanced Features",
    "type": "open-ended",
    "question": "When should you use @extend vs mixins in SASS?",
    "choices": null,
    "correctAnswer": null,
    "explanation": "Use @extend for shared base styles that don't need parameters (creates grouped selectors). Use mixins for reusable patterns with parameters or complex logic. @extend can cause bloated CSS if overused, while mixins provide more flexibility but duplicate code."
  },
  {
    "id": 12,
    "topic": "Data Types",
    "type": "multiple-choice",
    "question": "Which SASS data type is best for storing multiple related values?",
    "choices": ["Maps", "Lists", "Strings", "Numbers"],
    "correctAnswer": 0,
    "explanation": "Maps are ideal for storing key-value pairs of related data, like color themes or breakpoint definitions, providing better organization than lists."
  },
  {
    "id": 13,
    "topic": "Functions",
    "type": "multiple-choice",
    "question": "What does the @return directive do in SASS functions?",
    "choices": ["Returns a value from a function", "Returns to previous file", "Reverses a calculation", "Returns an error"],
    "correctAnswer": 0,
    "explanation": "@return specifies the value that a SASS function should return when called, similar to return statements in programming languages."
  },
  {
    "id": 14,
    "topic": "Control Directives",
    "type": "open-ended",
    "question": "What are the main control directives in SASS and when would you use them?",
    "choices": null,
    "correctAnswer": null,
    "explanation": "Main control directives: @if/@else for conditional logic, @for for counted loops, @each for iterating over lists/maps, @while for conditional loops. Use them to generate utility classes, responsive breakpoints, color variations, and other repetitive CSS patterns."
  },
  {
    "id": 15,
    "topic": "Compilation",
    "type": "multiple-choice",
    "question": "What is the difference between SASS and SCSS syntax?",
    "choices": ["SASS uses indentation, SCSS uses brackets and semicolons", "SASS is newer than SCSS", "SCSS is faster than SASS", "No functional difference"],
    "correctAnswer": 0,
    "explanation": "SASS (indented syntax) uses indentation and newlines like Python, while SCSS (Sassy CSS) uses brackets and semicolons like CSS. Both compile to the same CSS output."
  }
]